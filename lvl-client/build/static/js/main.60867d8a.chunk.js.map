{"version":3,"sources":["serviceWorker.js","actions/index.js","components/Login.js","components/PrivateRoute.js","components/Protected.js","components/Register.js","components/activitylog/ActivityLog.js","App.js","reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","getData","axios","get","headers","Authorization","localStorage","getItem","then","res","console","log","data","catch","err","addActivity","newActivity","dispatch","type","payload","error","response","Login","state","credentials","username","password","handleChanges","e","_this","setState","Object","objectSpread","defineProperty","target","name","value","login","preventDefault","props","history","push","react_default","a","createElement","onSubmit","this","placeholder","onChange","Component","connect","creds","post","setItem","token","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","Protected","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","Register","call","handleRegister","_this$state$credentia","confirmPassword","registerUser","withRouter","isRegistering","Button","styled","button","_templateObject","activityLog","description","results","enjoyment","activities","componentDidMount","getActivities","handleFormChanges","_e$target","handleAddActivity","_this$state","activityOptions","length","map","activity","id","autoComplete","App","BrowserRouter","className","Link","exact","path","ActivityLog","components_PrivateRoute","initialState","isLoggingIn","addingActivity","lvlReducer","undefined","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","logger","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60867d8a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\r\n\r\n//----Login----//\r\nexport const LOGIN_START = \"LOGIN_START\";\r\n\r\n//----Fetch----//\r\nexport const FETCH_REQUEST = \"FETCH_REQUEST\";\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\r\n\r\n//----Register----//\r\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\r\nexport const REGISTER_START = \"REGISTER_START\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\n\r\n//----Activity----//\r\nexport const GET_ACTIVITY_START = \"GET_ACTIVITY_START\";\r\nexport const GET_ACTIVITY_SUCCESS = \"GET_ACTIVITY_SUCCESS\";\r\nexport const GET_ACTIVITY_FAILURE = \"GET_ACTIVITY_FAILURE\";\r\n\r\n//----Description----//\r\nexport const ADD_DESCRIPTION_REQUEST = \"ADD_DESCRIPTION_REQUEST\";\r\nexport const ADD_DESCRIPTION_SUCCESS = \"ADD_DESCRIPTION_SUCCESS\";\r\nexport const ADD_DESCRIPTION_FAILURE = \"ADD_DESCRIPTION_FAILURE\";\r\n\r\n//----Enjoyment----//\r\nexport const ADD_ACTIVITY_START = \"ADD_ENJOYMENT_START\";\r\nexport const ADD_ACTIVITY_SUCCESS = \"ADD_ACTIVITY_SUCCESS\";\r\nexport const ADD_ACTIVITY_FAILURE = \"ADD_ACTIVITY_FAILURE\";\r\n\r\n//----Results----//\r\nexport const ADD_RESULTS_REQUEST = \"ADD_RESULTS_REQUEST\";\r\nexport const ADD_RESULTS_SUCCESS = \"ADD_RESULTS_SUCCESS\";\r\nexport const ADD_RESULTS_FAILURE = \"ADD_RESULTS_Failure\";\r\n\r\n//----- Login Action -----//\r\n\r\nexport const login = creds => dispatch => {\r\n  dispatch({ type: LOGIN_START });\r\n  return axios\r\n    .post(\"https://bw-designyourlife-api.herokuapp.com/api/auth/login\", creds)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data.payload });\r\n      getData();\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//----- Get Data Action -----//\r\n\r\nexport const getData = () => {\r\n  axios\r\n    .get(\"https://bw-designyourlife-api.herokuapp.com/testDb\", {\r\n      headers: { Authorization: localStorage.getItem(\"token\") }\r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//----- Register User Action -----//\r\n\r\nexport const registerUser = creds => dispatch => {\r\n  dispatch({ type: REGISTER_START });\r\n  axios\r\n    .post(\r\n      \"https://bw-designyourlife-api.herokuapp.com/api/auth/register\",\r\n      creds\r\n    )\r\n    .then(res => {\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data.payload });\r\n      getData();\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: REGISTER_FAILURE, payload: err });\r\n    });\r\n};\r\n\r\n//----- Get Activity Action -----//\r\n\r\nexport const getActivities = () => dispatch => {\r\n  dispatch({ type: GET_ACTIVITY_START });\r\n  axios\r\n    .get(\"https://bw-designyourlife-api.herokuapp.com/api/activities/username\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_ACTIVITY_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ACTIVITY_FAILURE,\r\n        payload: err.response\r\n      });\r\n    });\r\n};\r\n\r\n//----- Add Activity Action-----//\r\n\r\nexport const addActivity = newActivity => dispatch => {\r\n  dispatch({ type: ADD_ACTIVITY_START });\r\n  axios\r\n    .get(\"https://bw-designyourlife-api.herokuapp.com/api/activities\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_ACTIVITY_SUCCESS,\r\n        payload: newActivity\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_ACTIVITY_FAILURE,\r\n        error: err.response\r\n      });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    credentials: {\r\n      username: \"\",\r\n      password: \"\"\r\n    }\r\n  };\r\n\r\n  handleChanges = e => {\r\n    this.setState({\r\n      credentials: {\r\n        ...this.state.credentials,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  login = e => {\r\n    e.preventDefault();\r\n    this.props.login(this.state.credentials).then(() => {\r\n      this.props.history.push(\"/protected\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.login}>\r\n          <h4>Username: </h4>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            value={this.state.credentials.username}\r\n            onChange={this.handleChanges}\r\n          />\r\n          <h4>Password: </h4>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={this.state.credentials.password}\r\n            onChange={this.handleChanges}\r\n          />\r\n\r\n          <button> Log In </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { login }\r\n)(Login);\r\n","import React from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n        }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nexport class Protected extends Component {\r\n    componentDidMount() {}\r\n\r\n        render() {\r\n            return (\r\n            <div>\r\n                <h2>Login successful</h2>\r\n            </div>\r\n            );\r\n        }\r\n        }\r\n\r\nexport default Protected;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../actions\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      credentials: {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    this.setState({\r\n      credentials: {\r\n        ...this.state.credentials,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  handleRegister = e => {\r\n    e.preventDefault();\r\n    const { password, confirmPassword } = this.state.credentials;\r\n    if (password === confirmPassword) {\r\n      this.props.registerUser({\r\n        username: this.state.credentials.username,\r\n        password\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleRegister}>\r\n          <h4>Username: </h4>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={this.state.credentials.username}\r\n            onChange={this.handleChanges}\r\n          />\r\n          <h4> Password: </h4>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.credentials.password}\r\n            onChange={this.handleChanges}\r\n          />\r\n          <h4>Confirm Password: </h4>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={this.state.credentials.confirmPassword}\r\n            onChange={this.handleChanges}\r\n          />\r\n\r\n          <button> Register </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isRegistering: state.isRegistering\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(Register)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { addActivity, getActivities } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  background: grey;\r\n  width: 8rem;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nclass activityLog extends Component {\r\n  state = {\r\n    description: \"\",\r\n    results: \"\",\r\n    enjoyment: \"\",\r\n    activities: this.props.activities\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.getActivities();\r\n    console.log(this.props.getActivities());\r\n    // this.setState({ activities: activities });\r\n  };\r\n\r\n  handleFormChanges = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleAddActivity = e => {\r\n    const { description, results, enjoyment } = this.state;\r\n    e.preventDefault();\r\n    this.props.addActivity({ description, results, enjoyment });\r\n\r\n    // const newActivity = {\r\n    //   description: this.state.description,\r\n    //   results: this.state.results,\r\n    //   enjoyment: this.state.enjoyment\r\n    // };\r\n\r\n    // this.props.addActivity(newActivity);\r\n    // console.log(\"newactivity\", newActivity);\r\n\r\n    // this.setState({\r\n    //   description: \"\",\r\n    //   results: \"\",\r\n    //   enjoyment: \"\",\r\n    //   activities: []\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    const activityOptions =\r\n      this.state.activities.length &&\r\n      this.state.activities.map(activity => {\r\n        console.log(activity);\r\n        return (\r\n          <option value={activity.name} key={activity.id}>\r\n            {activity.name}\r\n          </option>\r\n        );\r\n      });\r\n    return (\r\n      <div>\r\n        <form onSubmit={addActivity}>\r\n          <select>{activityOptions}</select>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Description\"\r\n            value={this.state.description}\r\n            onChange={this.handleFormChanges}\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"results\"\r\n            placeholder=\"Results\"\r\n            autoComplete=\"off\"\r\n            value={this.state.results}\r\n            onChange={this.handleFormChanges}\r\n          />\r\n\r\n          <input\r\n            type=\"number\"\r\n            name=\"enjoyment\"\r\n            value={this.state.enjoyment}\r\n            onChange={this.handleFormChanges}\r\n            autoComplete=\"off\"\r\n          />\r\n\r\n          <Button type=\"submit\"> Add Activity </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activities: state.activities\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getActivities, addActivity }\r\n)(activityLog);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Protected from \"./components/Protected\";\nimport Register from \"./components/Register\";\nimport ActivityLog from \"./components/activitylog/ActivityLog\";\n\n// import styled from \"styled-components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <h1> LVL </h1>\n\n          <ul>\n            <li>\n              <Link to=\"\"> (Public) </Link>\n            </li>\n            <li>\n              <Link to=\"/protected\"> Protected </Link>\n            </li>\n            <li>\n              <Link to=\"/login\"> Log In</Link>\n            </li>\n            <li>\n              <Link to=\"/register\">Register</Link>\n            </li>\n            <li>\n              <Link to=\"/activitylog\"> Activity Log</Link>\n            </li>\n          </ul>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/activityLog\" component={ActivityLog} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <PrivateRoute exact path=\"/protected\" component={Protected} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import {\r\n  FETCH_REQUEST,\r\n  FETCH_SUCCESS,\r\n  FETCH_FAILURE,\r\n  REGISTER_START,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  //   ADD_DESCRIPTION_SUCCESS,\r\n  //   ADD_ENJOYMENT,\r\n  //   ADD_RESULTS,\r\n  GET_ACTIVITY_START,\r\n  GET_ACTIVITY_SUCCESS,\r\n  GET_ACTIVITY_FAILURE\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isLoggingIn: false,\r\n  activities: [],\r\n  error: null,\r\n  isRegistering: false,\r\n  addingActivity: false\r\n};\r\n\r\nconst lvlReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        error: \"\"\r\n      };\r\n    case FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        activities: action.payload,\r\n        isLoggingIn: false,\r\n        error: \"\"\r\n      };\r\n    case FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoggingIn: false\r\n      };\r\n    case REGISTER_START:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isRegistering: true\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isRegistering: false,\r\n        error: \"\"\r\n      };\r\n    case REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isRegistering: false\r\n      };\r\n\r\n    case GET_ACTIVITY_START:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        addingActivity: true\r\n      };\r\n    case GET_ACTIVITY_SUCCESS:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        activities: action.payload,\r\n        addingActivity: false\r\n      };\r\n    case GET_ACTIVITY_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        addingActivity: false\r\n      };\r\n    // case ADD_RESULTS:\r\n    //   return {\r\n    //     ...state,\r\n    //     activities: action.payload,\r\n    //     addResults: true\r\n    //   };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default lvlReducer;\r\n","import * as serviceWorker from \"./serviceWorker\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer, // root reducer checks for login by looking for user in localStorage\n  composeEnhancers(applyMiddleware(thunk, logger)) //, logger))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}